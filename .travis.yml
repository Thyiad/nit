sudo: false
dist: trusty

branches:
    except:
        - appveyor

language: cpp

os: linux

compiler:
    - gcc
    - clang

env:
    matrix:
        - CONFIG=Debug
        - CONFIG=Release

addons:
    apt:
        packages:
            - libboost-all-dev

jobs:
    include:
        - stage: lint
          compiler: clang
          env: CONFIG=Lint CLANG_VERSION=6.0
          addons:
              apt:
                  packages:
                      - clang-format-6.0
                  sources:
                      - ubuntu-toolchain-r-test
                      - llvm-toolchain-trusty-6.0
          install:
              - git clone https://github.com/Sarcasm/run-clang-format
          script:
              - .travis/lint.sh
        - stage: test
          os: osx
          compiler: clang
          env: CONFIG=Release
        - stage: test
          compiler: gcc
          env: CONFIG=Coverage
          addons:
              apt:
                  packages:
                      - libboost-all-dev
                      - lcov
          install:
              - pip install --user codecov
          script:
              - cd build
              - cmake .. -DCMAKE_BUILD_TYPE=Debug -DNIT_WITH_COVERAGE=ON
              - make -j 2
              - make test
              - cd ..
              - .travis/submit_codecov.sh
        - stage: test
          compiler: gcc
          env: CONFIG=Memcheck
          addons:
              apt:
                  packages:
                      - libboost-all-dev
                      - valgrind
          script:
              - cd build
              - cmake .. -DCMAKE_BUILD_TYPE=Debug
              - make -j 2
              - find bin/ -name '*_tests' | xargs -n 1 valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite --errors-for-leak-kinds=definite

stages:
    - lint
    - test

before_script:
    - mkdir build

script:
    - cd build
    - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE="${CONFIG}" ..
    - make -j 2
    - ctest --verbose
